.todos {
  display: flex;
  justify-content: center;
}
.todo-list {
  list-style: none;
  padding: 0;
}
.note-card {
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  margin: 10px;
  overflow: hidden;
  transition: transform 0.3s ease-in-out;
}
.note-card:hover {
  transform: translateY(-5px);
}
.card-content {
  padding: 20px;
}
/* Cream Animation */
.note-card {
  position: relative;
}
.note-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(90deg, rgba(253, 254, 255, 0) 0%, #fdfefe 50%, rgba(253, 254, 255, 0) 100%);
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}
.note-card:hover::before {
  opacity: 1;
}
@property --x {
  syntax: "<number>";
  inherits: true;
  initial-value: 0.3;
}
@property --y {
  syntax: "<number>";
  inherits: true;
  initial-value: 0.1;
}
body {
  background: #efefef;
  font: 16px system-ui;
  color: black;
  display: flex;
  height: 100vh;
  perspective: 1000px;
}
.card {
  --degree: 19deg;
  --x-range: 2 * (-0.5 + var(--x));
  --y-range: 2 * (-0.5 + var(--y));
  width: 350px;
  position: relative;
  display: grid;
  gap: 4px;
  margin: auto;
  padding: 8px;
  background: white;
  border: 1px solid white;
  border-radius: 16px;
  box-shadow: calc(23px * var(--x-range)) calc(23px * var(--y-range)) 20px
    rgba(0, 0, 0, 0.18);
  transition: 200ms all;
  animation: 3s move alternate ease-in-out infinite;
  &:hover {
    animation: none;
    animation-play-state: paused;
  }
  transform: rotateX(calc(var(--degree) * var(--y-range)))
    rotateY(calc(-1 * var(--degree) * var(--x-range)));
  img {
    max-width: 100%;
    object-fit: cover;
    border-radius: 8px;
  }
  &::after {
    content: "";
    position: absolute;
    inset: 0;
    cursor: none;
    border-radius: inherit;
    opacity: 0.5;
    background-image: radial-gradient(
      circle at calc(100% * var(--x)) calc(100% * var(--y)),
      white,
      transparent
    );
  }
}
@keyframes move {
  from {
    --x: 0.2;
    --y: 0.7;
  }
  to {
    --x: 0.6;
    --y: 0.1;
  }
}
.cards-container {
  display: flex; /* Use flexbox to create a row layout */
  flex-wrap: wrap; /* Allow cards to wrap to the next row if needed */
  gap: 20px; /* Add space between cards */
  margin-top: 52px;
}
.card {
  width:calc(29% - 80px); /* Set the width of each card to 25% of the container width (minus the gap) */
  margin-bottom: 20px; /* Add some bottom margin to space out the rows */
  border: 1px solid #ccc; /* Add a border for visual separation */
  border-radius: 8px; /* Add border radius for rounded corners */
}
.card img {
  width: 100%; /* Make the image fill the entire width of the card */
  border-top-left-radius: 8px; /* Add border radius to the top-left corner */
  border-top-right-radius: 8px; /* Add border radius to the top-right corner */
}
.card-content {
  padding: 10px; /* Add padding for content inside the card */
}
/* to-do-form.component.scss */
.bio {
  overflow: hidden; /* Hide any overflow content */
}
.bio p {
  display: block; /* Change to block to display on separate lines */
  white-space: nowrap; /* Prevent wrapping of text */
  animation: slideText 10s linear infinite; /* Define animation */
}
.bio p span {
  display: inline-block; /* Make each span display inline */
  margin-right: 20px; /* Add spacing between spans */
}
@keyframes slideText {
  0% {
    transform: translateX(100%); /* Start position */
  }
  100% {
    transform: translateX(-100%); /* End position */
  }
}
